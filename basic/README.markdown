# Практические задания по Java

Этот репозиторий содержит папки с практическими заданиями по Java, которые помогают освоить основные концепции программирования. Каждая папка соответствует определенному заданию и теме. Ниже приведено описание каждой папки и связанного с ней задания.

## Структура папок и описание

### Variables (Переменные)
- **Описание**: Содержит программу на Java, которая демонстрирует работу с переменными и примитивными типами данных. Задание заключается в создании калькулятора личного бюджета, который запрашивает доход и расходы (на еду, жилье, транспорт) и вычисляет остаток.
- **Задание**: Задание 1 - Калькулятор личного бюджета.

### IfElse (Условия If-Else)
- **Описание**: Содержит программу, использующую условные операторы `if-else` для проверки возраста пользователя. Программа определяет, является ли пользователь ребенком (<18 лет), взрослым (18–65 лет) или пенсионером (>65 лет).
- **Задание**: Задание 2 - Проверка возраста.

### NestedConditions (Вложенные условия)
- **Описание**: Содержит программу, которая использует вложенные условия `if-else` для преобразования числовой оценки (0–100) в буквенный эквивалент (A, B, C, D, F). Также проверяется корректность введенной оценки.
- **Задание**: Задание 3 - Классификатор оценок.

### BooleanOperations (Булевы операции)
- **Описание**: Содержит программу, которая использует булевы операции (`&&`, `||`) для определения, является ли введенный год високосным. Год високосный, если он делится на 4, но не на 100, или делится на 400.
- **Задание**: Задание 4 - Проверка на високосный год.

### TernaryOperator (Тернарный оператор)
- **Описание**: Содержит программу, которая использует тернарный оператор для проверки, является ли введенное число четным или нечетным, и выводит результат.
- **Задание**: Задание 5 - Проверка четности числа.

### ForLoop (Цикл for)
- **Описание**: Содержит программу, которая использует цикл `for` для вывода таблицы умножения для числа, введенного пользователем (например, 5x1, 5x2, ..., 5x10).
- **Задание**: Задание 6 - Таблица умножения.

### WhileLoop (Цикл while)
- **Описание**: Содержит программу, которая использует цикл `while` для суммирования чисел, введенных пользователем, пока не будет введен 0. После этого выводится общая сумма.
- **Задание**: Задание 7 - Сумма чисел.

### DoWhileLoop (Цикл do-while)
- **Описание**: Содержит программу, которая использует цикл `do-while` для игры в угадайку. Пользователь пытается угадать случайно сгенерированное число (от 1 до 10), пока не угадает.
- **Задание**: Задание 8 - Угадай число.

### BreakOperator (Оператор break)
- **Описание**: Содержит программу, которая использует оператор `break` в цикле для поиска первого делителя введенного числа (кроме 1 и самого числа). Если делителей нет, программа сообщает, что число простое.
- **Задание**: Задание 9 - Поиск первого делителя.

### ContinueOperator (Оператор continue)
- **Описание**: Содержит программу, которая использует оператор `continue` в цикле `for` для вывода всех четных чисел от 1 до 20, пропуская нечетные.
- **Задание**: Задание 10 - Вывод четных чисел.

### SwitchCase (Оператор switch-case)
- **Описание**: Содержит программу, которая использует оператор `switch-case` для преобразования номера дня недели (1–7) в его название. При некорректном вводе выводится сообщение об ошибке.
- **Задание**: Задание 11 - Калькулятор дней недели.

### Arrays(Массивы)
- **Описание**: Содержит программу, которая демонстрирует работу с массивами в Java. Программа запрашивает у пользователя размер массива и его элементы, затем вычисляет среднее значение элементов и находит максимальный элемент в массиве.
- **Задание**: Задание 12 - Анализ массива.

### Methods (Методы)
- **Описание**: Содержит программу, которая демонстрирует использование методов в Java. Программа включает метод для вычисления факториала введенного числа и метод для проверки, является ли число простым. Пользователь вводит число, а программа вызывает методы и выводит результаты.
- **Задание**: Задание 13 - Работа с методами.

### LibraryControl (Интерфейсы и классы)
- **Описание**: Содержит программу, демонстрирующую использование интерфейсов и классов в Java. Проект представляет собой простую систему управления библиотекой с интерфейсом LibraryItem, классами Book и Magazine, классом Library для управления элементами и классом LibrarySystem для демонстрации работы. Программа добавляет книги и журналы, отображает доступные элементы, позволяет занимать их.
- **Задание**: Задание 14 - Система управления библиотекой с интерфейсами.

### LibraryApp (Расширенная система управления библиотекой)
- **Описание**: Содержит расширенную консольную программу для управления библиотекой, демонстрирующую работу с коллекциями (List, Map), потоками (streams) и ООП. Включает классы Book, User, Library для логики и LibraryApp для пользовательского интерфейса. Поддерживает добавление/удаление книг и пользователей, поиск, выдачу/возврат книг, отображение списков.
- **Задание**: Задание 15 - Консольное приложение для библиотеки.

### PairTask (Обобщенные типы)
- **Описание**: Содержит программу, демонстрирующую использование обобщенных типов (generics) в Java. Класс Pair позволяет хранить пару объектов типа T (где T реализует Comparable<T>) и определять максимальный и минимальный элементы пары. Программа тестирует Pair с типами Integer, String и Double.
- **Задание**: Задание 16 - Работа с обобщенными типами.